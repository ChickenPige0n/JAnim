# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, jkjkil4
# This file is distributed under the same license as the JAnim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: JAnim \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-20 11:45+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/janim/render/base.rst:2
msgid "base"
msgstr ""

#: ../../source/rst_utils/tip_of_complex.rst:3
msgid "这部分内容涉及 JAnim 实现原理，可能较为复杂，若没有研究源码的需求，你应酌情阅读"
msgstr ""

#: janim.render.base.RenderData:1 janim.render.base.Renderer:1 of
msgid "基类：:py:class:`object`"
msgstr ""

#: janim.render.base.Renderer:1 of
msgid "渲染器的基类"
msgstr ""

#: janim.render.base.Renderer:3 of
msgid "重写 :meth:`render` 以实现具体功能"
msgstr ""

#: janim.render.base.RenderData:1 of
msgid "在渲染过程中需要配置的属性"
msgstr ""

#: janim.render.base.RenderData:3 of
msgid "通过 :py:obj:`Renderer.data_ctx` 进行设置和获取"
msgstr ""

#: janim.render.base.set_global_uniforms:1 of
msgid "设置在每个着色器中都可以访问到的 ``uniforms`` （需要在着色器中声明后使用）"
msgstr ""

#: janim.render.base.apply_global_uniforms:1 of
msgid "将 ``uniforms`` 设置到 ``prog`` 中，并且跳过 ``prog`` 中没有的属性"
msgstr ""

#: janim.render.base.get_program:1 of
msgid ""
"给定相对于 janim 路径的文件位置，自动遍历后缀并读取着色器代码， 例如传入 `render/shaders/dotcloud` "
"后，会自动读取以下位置的代码："
msgstr ""

#: janim.render.base.get_program:4 of
msgid "redner/shaders/dotcloud.vert"
msgstr ""

#: janim.render.base.get_program:5 of
msgid "render/shaders/dotcloud.geom"
msgstr ""

#: janim.render.base.get_program:6 of
msgid "render/shaders/dotcloud.frag"
msgstr ""

#: janim.render.base.get_custom_program:8 janim.render.base.get_program:8 of
msgid "若没有则缺省，但要能创建可用的着色器"
msgstr ""

#: janim.render.base.get_custom_program:10 janim.render.base.get_program:10 of
msgid "注："
msgstr ""

#: janim.render.base.get_custom_program:12 janim.render.base.get_program:12 of
msgid "若 ``filepath`` 对应着色器程序先前已创建过，则会复用先前的对象，否则另外创建新的对象并记录"
msgstr ""

#: janim.render.base.get_program:13 of
msgid "该方法只能读取 janim 内置的着色器，读取自定义着色器请使用 :meth:`get_custom_program`"
msgstr ""

#: janim.render.base.get_custom_program:1 of
msgid "给定文件位置自动遍历后缀并读取着色器代码， 例如传入 `shaders/yourshader` 后，会自动读取以下位置的代码："
msgstr ""

#: janim.render.base.get_custom_program:4 of
msgid "shaders/yourshader.vert"
msgstr ""

#: janim.render.base.get_custom_program:5 of
msgid "shaders/yourshader.geom"
msgstr ""

#: janim.render.base.get_custom_program:6 of
msgid "shaders/yourshader.frag"
msgstr ""

#: janim.render.base.get_custom_program:13 of
msgid "该方法只能读取自定义的着色器，读取 janim 内置着色器请使用 :meth:`get_program`"
msgstr ""

#: janim.render.base.get_compute_shader:1 of
msgid ""
"载入相对于 janim 目录的指定文件的 ComputeShader， 例如 "
"`render/shaders/map_points.comp.glsl` 就会载入 janim 文件夹中的这个文件"
msgstr ""

#: janim.render.base.get_compute_shader:4 of
msgid "注：若 ``filepath`` 对应的 ComputeShader 先前已创建过，则会复用先前的对象，否则另外创建新的对象并记录"
msgstr ""

#~ msgid "**提示：这部分内容涉及 JAnim 实现原理，可能较为复杂，若没有研究源码的需求，你应酌情阅读**"
#~ msgstr ""

#~ msgid "给定文件位置自动遍历后缀并读取着色器代码， 例如传入 `shaders/dotcloud` 后，会自动读取以下位置的代码："
#~ msgstr ""

#~ msgid "shaders/dotcloud.vert"
#~ msgstr ""

#~ msgid "shaders/dotcloud.geom"
#~ msgstr ""

#~ msgid "shaders/dotcloud.frag"
#~ msgstr ""

#~ msgid "注：若 ``filepath`` 对应着色器程序先前已创建过，则会复用先前的对象，否则另外创建新的对象并记录"
#~ msgstr ""

#~ msgid "重写 :meth:`init` 和 :meth:`render` 以实现具体功能"
#~ msgstr ""

#~ msgid ""
#~ "载入指定文件的 ComputeShader， 例如 "
#~ "`render/shaders/map_points.comp.glsl` 就会载入这个文件"
#~ msgstr ""

