# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, jkjkil4
# This file is distributed under the same license as the JAnim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2025.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: JAnim\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-10 11:11+0800\n"
"PO-Revision-Date: 2025-04-10 11:12+0800\n"
"Last-Translator: \n"
"Language-Team: en <LL@li.org>\n"
"Language: en\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"Generated-By: Babel 2.17.0\n"
"X-Generator: Poedit 3.6\n"

#: ../../source/janim/render/program.rst:2
msgid "program"
msgstr "program"

#: janim.render.program.get_janim_program:1 of
msgid ""
"给定相对于 janim 路径的文件位置，自动遍历后缀并读取着色器代码， 例如传入 "
"``render/shaders/dotcloud`` 后，会自动读取以下位置的代码："
msgstr ""
"Given a file path relative to the janim directory, this function "
"automatically traverses the suffixes and reads the shader code. For "
"example, passing ``render/shaders/dotcloud`` will automatically read the "
"following files:"

#: janim.render.program.get_janim_program:4 of
msgid "redner/shaders/dotcloud.vert.glsl"
msgstr "redner/shaders/dotcloud.vert.glsl"

#: janim.render.program.get_janim_program:5 of
msgid "render/shaders/dotcloud.geom.glsl"
msgstr "render/shaders/dotcloud.geom.glsl"

#: janim.render.program.get_janim_program:6 of
msgid "render/shaders/dotcloud.frag.glsl"
msgstr "render/shaders/dotcloud.frag.glsl"

#: janim.render.program.get_custom_program:8
#: janim.render.program.get_janim_program:8 of
msgid "若没有则缺省，但要能创建可用的着色器"
msgstr ""
"The entry will be skipped if not available, but a usable shader must "
"still be created"

#: janim.render.program.get_custom_program:10
#: janim.render.program.get_janim_program:10 of
msgid "注："
msgstr "Note:"

#: janim.render.program.get_custom_program:12
#: janim.render.program.get_janim_program:12 of
msgid ""
"若 ``filepath`` 对应着色器程序先前已创建过，则会复用先前的对象，否则另外"
"创建新的对象并记录"
msgstr ""
"If the shader program for the given filepath has been created before, it "
"will reuse the existing object; otherwise, it will create a new one and "
"cache it"

#: janim.render.program.get_janim_program:13 of
msgid ""
"该方法只能读取 janim 内置的着色器，读取自定义着色器请使"
"用 :meth:`get_custom_program`"
msgstr ""
"This method can only load built-in shaders from janim; to load custom "
"shaders, please use :meth:`get_custom_program`"

#: janim.render.program.get_custom_program:1 of
msgid ""
"给定文件位置自动遍历后缀并读取着色器代码， 例如传入 ``shaders/"
"yourshader`` 后，会自动读取以下位置的代码："
msgstr ""
"Given a file path, this function automatically traverses the suffixes "
"and reads the shader code. For example, passing ``shaders/yourshader`` "
"will automatically read the following files:"

#: janim.render.program.get_custom_program:4 of
msgid "shaders/yourshader.vert.glsl"
msgstr "shaders/yourshader.vert.glsl"

#: janim.render.program.get_custom_program:5 of
msgid "shaders/yourshader.geom.glsl"
msgstr "shaders/yourshader.geom.glsl"

#: janim.render.program.get_custom_program:6 of
msgid "shaders/yourshader.frag.glsl"
msgstr "shaders/yourshader.frag.glsl"

#: janim.render.program.get_custom_program:13 of
msgid ""
"该方法只能读取自定义的着色器，读取 janim 内置着色器请使"
"用 :meth:`get_janim_program`"
msgstr ""
"This method can only read custom shaders. To read built-in shaders in "
"janim, please use :meth:`get_janim_program`"

#: janim.render.program.get_program_from_string:1 of
msgid "从着色器字符串创建着色器程序"
msgstr "Creates a shader program from shader strings"

#: janim.render.program.get_janim_compute_shader:1 of
msgid ""
"载入相对于 janim 目录的指定文件的 ComputeShader， 例如 ``render/shaders/"
"map_points.comp.glsl`` 就会载入 janim 文件夹中的这个文件"
msgstr ""
"Loads a ComputeShader from a file relative to the janim directory. For "
"example, passing ``render/shaders/map_points.comp.glsl`` will load this "
"file from the janim directory"

#: janim.render.program.get_janim_compute_shader:4 of
msgid ""
"注：若 ``filepath`` 对应的 ComputeShader 先前已创建过，则会复用先前的对"
"象，否则另外创建新的对象并记录"
msgstr ""
"If the ComputeShader for the given filepath has been created before, it "
"will reuse the existing object; otherwise, it will create a new one and "
"cache it"
