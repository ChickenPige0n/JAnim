# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2023, jkjkil4
# This file is distributed under the same license as the JAnim package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: JAnim \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-04-27 00:36+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: en\n"
"Language-Team: en <LL@li.org>\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.17.0\n"

#: ../../source/janim/items/text.rst:2
msgid "text"
msgstr ""

#: ../../source/janim/items/text.rst:5
msgid "文字物件的结构"
msgstr ""

#: ../../source/janim/items/text.rst:7
msgid ""
"文字物件的结构比较复杂，:class:`~.Text` 包含若干个 :class:`~.TextLine`，每个 "
":class:`~.TextLine` 包含若干个 :class:`~.TextChar`"
msgstr ""

#: ../../source/janim/items/text.rst:9
msgid "比如，对于"
msgstr ""

#: ../../source/janim/items/text.rst:15
msgid ""
"那么下图便说明了它的子物件情况， ``txt[0]`` 、 ``txt[1]`` 和 ``txt[2]`` 都是 "
":class:`~.TextLine`"
msgstr ""

#: ../../source/janim/items/text.rst:21
msgid "对于每个 :class:`~.TextLine` 而言，比如 ``txt[0]``，其子物件情况是如下图这样的"
msgstr ""

#: ../../source/janim/items/text.rst:29
msgid "其中 ``txt[0][3]`` 和 ``txt[0][9]`` 是空格"
msgstr ""

#: ../../source/janim/items/text.rst:31
msgid "也就是说这是一个 :class:`~.Text` → :class:`~.TextLine` → :class:`~.TextChar` 的嵌套结构"
msgstr ""

#: ../../source/janim/items/text.rst:33
msgid ""
"对于这种复杂的嵌套结构，如果你想要取子物件列表的切片，手动数数可能有点繁琐（比如上面例子的首行中，\"first\" 对应的切片是 "
"``[4:9]``）"
msgstr ""

#: ../../source/janim/items/text.rst:35
msgid "为了解决这个问题，你可以参考预览界面的 :ref:`子物件选择 <subitem_selector>` 功能"
msgstr ""

#: ../../source/janim/items/text.rst:38
msgid "字符的标记属性"
msgstr ""

#: ../../source/janim/items/text.rst:40
msgid ":class:`~.TextChar` 有四个标记属性，比如对于 “Ggf” 中的 “g” 字符而言："
msgstr ""

#: ../../source/janim/items/text.rst:46
msgid ":meth:`~.TextChar.get_mark_orig` 是字符在基线上的原点"
msgstr ""

#: ../../source/janim/items/text.rst:47
msgid ":meth:`~.TextChar.get_mark_right` 是对字符水平右方向的标记"
msgstr ""

#: ../../source/janim/items/text.rst:48
msgid ":meth:`~.TextChar.get_mark_up` 是对字符竖直上方向的标记"
msgstr ""

#: ../../source/janim/items/text.rst:49
msgid ":meth:`~.TextChar.get_mark_advance` 指向下一个字符的 ``orig``"
msgstr ""

#: ../../source/janim/items/text.rst:53
msgid ""
":class:`~.TextLine` 也有类似的结构，但是只有 ``orig`` 、 ``right`` 和 ``up``，没有 "
"``advance``"
msgstr ""

#: ../../source/janim/items/text.rst:58
msgid "富文本"
msgstr ""

#: ../../source/janim/items/text.rst:60
msgid "可以使用起始标记和结束标记（像 html 那样的）应用富文本格式："
msgstr ""

#: ../../source/janim/items/text.rst:62
msgid "具体写法是： ``<格式名 参数>被应用对应格式的文本</格式名>``"
msgstr ""

#: ../../source/janim/items/text.rst:64
msgid "比如，要想让文字的一部分变为蓝色，可以这样书写："
msgstr ""

#: ../../source/janim/items/text.rst:72
msgid "这里的 ``c`` 是 ``color`` 的简写"
msgstr ""

#: ../../source/janim/items/text.rst:76
msgid ":class:`~.Text` 使用富文本需要传入 ``format=Text.Format.RichText``，否则默认情况下视作普通文本"
msgstr ""

#: ../../source/janim/items/text.rst:78
msgid "以下列出了可用的格式："
msgstr ""

#: ../../source/janim/items/text.rst:82
msgid "名称"
msgstr ""

#: ../../source/janim/items/text.rst:83
msgid "缩写"
msgstr ""

#: ../../source/janim/items/text.rst:84
msgid "作用"
msgstr ""

#: ../../source/janim/items/text.rst:85
msgid "参数"
msgstr ""

#: ../../source/janim/items/text.rst:86
msgid "示例"
msgstr ""

#: ../../source/janim/items/text.rst:87
msgid "备注"
msgstr ""

#: ../../source/janim/items/text.rst:88
msgid "color"
msgstr ""

#: ../../source/janim/items/text.rst:89
msgid "c"
msgstr ""

#: ../../source/janim/items/text.rst:90
msgid "颜色"
msgstr ""

#: ../../source/janim/items/text.rst:91
msgid "颜色名称"
msgstr ""

#: ../../source/janim/items/text.rst:92
msgid "``<c BLUE>JAnim</c>``"
msgstr ""

#: ../../source/janim/items/text.rst:97
msgid "十六进制值"
msgstr ""

#: ../../source/janim/items/text.rst:98
msgid "``<c #00ff00>JAnim</c>``"
msgstr ""

#: ../../source/janim/items/text.rst:103
msgid "r g b"
msgstr ""

#: ../../source/janim/items/text.rst:104
msgid "``<c 0 1.0 0.5>JAnim</c>``"
msgstr ""

#: ../../source/janim/items/text.rst:109
msgid "r g b a"
msgstr ""

#: ../../source/janim/items/text.rst:110
msgid "``<c 0 1.0 0.5 0.5>JAnim</c>``"
msgstr ""

#: ../../source/janim/items/text.rst:111 ../../source/janim/items/text.rst:129
msgid "描边也被设置为半透明"
msgstr ""

#: ../../source/janim/items/text.rst:112
msgid "stroke_color"
msgstr ""

#: ../../source/janim/items/text.rst:113
msgid "sc"
msgstr ""

#: ../../source/janim/items/text.rst:114
msgid "描边颜色"
msgstr ""

#: ../../source/janim/items/text.rst:115 ../../source/janim/items/text.rst:121
#: ../../source/janim/items/text.rst:133 ../../source/janim/items/text.rst:139
msgid "同上"
msgstr ""

#: ../../source/janim/items/text.rst:118
msgid "fill_color"
msgstr ""

#: ../../source/janim/items/text.rst:119
msgid "fc"
msgstr ""

#: ../../source/janim/items/text.rst:120
msgid "填充颜色"
msgstr ""

#: ../../source/janim/items/text.rst:124
msgid "alpha"
msgstr ""

#: ../../source/janim/items/text.rst:125
msgid "a"
msgstr ""

#: ../../source/janim/items/text.rst:126
msgid "透明度"
msgstr ""

#: ../../source/janim/items/text.rst:127 ../../source/janim/items/text.rst:145
#: ../../source/janim/items/text.rst:151
msgid "一个数"
msgstr ""

#: ../../source/janim/items/text.rst:128
msgid "``<a 0.5>JAnim</a>``"
msgstr ""

#: ../../source/janim/items/text.rst:130
msgid "stroke_alpha"
msgstr ""

#: ../../source/janim/items/text.rst:131
msgid "sa"
msgstr ""

#: ../../source/janim/items/text.rst:132
msgid "描边透明度"
msgstr ""

#: ../../source/janim/items/text.rst:136
msgid "fill_alpha"
msgstr ""

#: ../../source/janim/items/text.rst:137
msgid "fa"
msgstr ""

#: ../../source/janim/items/text.rst:138
msgid "填充透明度"
msgstr ""

#: ../../source/janim/items/text.rst:142
msgid "stroke"
msgstr ""

#: ../../source/janim/items/text.rst:143
msgid "s"
msgstr ""

#: ../../source/janim/items/text.rst:144
msgid "描边半径"
msgstr ""

#: ../../source/janim/items/text.rst:146
msgid "``<s 0.01>JAnim<s>``"
msgstr ""

#: ../../source/janim/items/text.rst:148
msgid "font_scale"
msgstr ""

#: ../../source/janim/items/text.rst:149
msgid "fs"
msgstr ""

#: ../../source/janim/items/text.rst:150
msgid "缩放倍数"
msgstr ""

#: ../../source/janim/items/text.rst:152
msgid "``Hello <fs 1.2>JAnim</fs>``"
msgstr ""

#: ../../source/janim/items/text.rst:156
msgid "参考文档"
msgstr ""

#: janim.items.text.Cmpt_Mark_TextCharImpl:1
#: janim.items.text.Cmpt_Mark_TextLineImpl:1 of
msgid ""
"基类：:py:class:`~janim.components.mark.Cmpt_Mark`, "
":py:class:`~typing.Generic`"
msgstr ""

#: janim.items.text.ProjType:1 of
msgid "基类：:py:class:`~enum.StrEnum`"
msgstr ""

#: janim.items.text.BasepointVItem:1 of
msgid ""
"基类：:py:class:`~janim.items.points.MarkedItem`, "
":py:class:`~janim.items.vitem.VItem`"
msgstr ""

#: janim.items.text.TextChar:1 of
msgid "基类：:py:class:`~janim.items.text.BasepointVItem`"
msgstr ""

#: janim.items.text.TextChar:1 of
msgid "字符物件，作为 :class:`TextLine` 的子物件，在创建 :class:`TextLine` 时产生"
msgstr ""

#: janim.items.text.TextChar.get_font_for_render:1 of
msgid "从字体列表中找到支持显示 ``unicode`` 的字体，如果找不到只好选用第一个"
msgstr ""

#: janim.items.text.TextChar.apply_act_list:1 of
msgid "应用富文本样式，由 :meth:`Text.apply_rich_text` 调用"
msgstr ""

#: janim.items.text.TextLine:1 of
msgid ""
"基类：:py:class:`~janim.items.text.BasepointVItem`, "
":py:class:`~janim.items.points.Group`\\ "
"[:py:class:`~janim.items.text.TextChar`]"
msgstr ""

#: janim.items.text.TextLine:1 of
msgid "单行文字物件，作为 :class:`Text` 的子物件，在创建 :class:`Text` 时产生s"
msgstr ""

#: janim.items.text.TextLine.arrange_in_line:1 of
msgid "根据 ``advance`` 的标记信息排列该行"
msgstr ""

#: janim.items.text.Text:1 of
msgid ""
"基类：:py:class:`~janim.items.vitem.VItem`, "
":py:class:`~janim.items.points.Group`\\ "
"[:py:class:`~janim.items.text.TextLine`]"
msgstr ""

#: janim.items.text.Text:1 of
msgid "文字物件，支持富文本等功能"
msgstr ""

#: janim.items.text.Text:3 of
msgid "如果对换行排版等有较高的需求可以考虑使用 :class:`~.TypstDoc`"
msgstr ""

#: janim.items.text.Text.Format:1 of
msgid "基类：:py:class:`~enum.Enum`"
msgstr ""

#: janim.items.text.Text.idx_to_row_col:1 of
msgid "由字符索引得到 行数、列数 索引"
msgstr ""

#: janim.items.text.Text.select_parts:1 of
msgid "根据 ``pattern`` 获得文字中的部分"
msgstr ""

#: janim.items.text.Text.arrange_in_lines:1 of
msgid "``buff``: 每行之间的额外间距"
msgstr ""

#: janim.items.text.Text.arrange_in_lines:2 of
msgid ""
"``base_buff``: 每行之间的基本间距，默认值 ``0.85`` 用于将两行上下排列，如果是 ``0`` "
"则会让两行完全重合，大部分时候不需要传入该值"
msgstr ""

#: janim.items.text.Text.apply_rich_text:1 of
msgid "应用富文本效果"
msgstr ""

#: janim.items.text.Title:1 of
msgid "基类：:py:class:`~janim.items.points.Group`"
msgstr ""

#: janim.items.text.Title:1 of
msgid "标题"
msgstr ""

#: janim.items.text.Title:3 of
msgid "``include_underline=True`` 会添加下划线（默认添加）"
msgstr ""

#: janim.items.text.Title:4 of
msgid "``underline_width`` 下划线的长度（默认屏幕宽 - 2 个单位）"
msgstr ""

#: janim.items.text.Title:5 of
msgid "``match_underline_width_to_text=True`` 时将下划线的长度和文字匹配（默认为 ``False``）"
msgstr ""

#: janim.items.text.SourceDisplayer:1 of
msgid "基类：:py:class:`~janim.items.text.Text`"
msgstr ""

#: janim.items.text.SourceDisplayer:1 of
msgid "显示 ``obj`` 的源代码"
msgstr ""

#~ msgid "根据 ``key`` 从 ``janim.constants.colors`` 得到颜色"
#~ msgstr ""

#~ msgid "用于声明可用的富文本格式"
#~ msgstr ""

#~ msgid "文字物件"
#~ msgstr ""

#~ msgid ""
#~ "基类：:py:class:`~janim.items.vitem.VItem`, "
#~ ":py:class:`~janim.items.points.Group`\\ "
#~ "[:py:class:`~janim.items.text.text.TextChar`]"
#~ msgstr ""

#~ msgid ""
#~ "基类：:py:class:`~janim.items.vitem.VItem`, "
#~ ":py:class:`~janim.items.points.Group`\\ "
#~ "[:py:class:`~janim.items.text.text.TextLine`]"
#~ msgstr ""

#~ msgid "基类：:py:class:`~janim.items.text.text.Text`"
#~ msgstr ""

#~ msgid "基类：:py:class:`~janim.items.vitem.VItem`"
#~ msgstr ""

#~ msgid ""
#~ "基类：:py:class:`~janim.items.vitem.VItem`, "
#~ ":py:class:`~janim.items.points.Group`\\ "
#~ "[:py:class:`~janim.items.text.TextChar`]"
#~ msgstr ""

#~ msgid ""
#~ "基类：:py:class:`~janim.items.points.MarkedItem`, "
#~ ":py:class:`~janim.items.vitem.VItem`, "
#~ ":py:class:`~janim.items.points.Group`\\ "
#~ "[:py:class:`~janim.items.text.TextChar`]"
#~ msgstr ""

